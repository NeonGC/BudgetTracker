name: Docker Image CI

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      
      - name: Pulling caches
        run: |
          export BUILDER_CACHE=neongc/budgettracker-builder:master
          export MASTER_CACHE=neongc/budgettracker:master
      
          docker pull $BUILDER_CACHE || true
          docker pull $MASTER_CACHE || true
      
      - name: Build the Builder image
        run: |
          export BUILDER_CACHE=neongc/budgettracker-builder:master
      
          docker build --cache-from $BUILDER_CACHE -t $BUILDER_CACHE . -f Dockerfile.builder
      
      - name: Push the Builder image
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        env: 
          DOCKER_LOGIN: ${{ secrets.DOCKER_LOGIN }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          export BUILDER_CACHE=neongc/budgettracker-builder:master
      
          docker login --username="$DOCKER_LOGIN" --password="$DOCKER_PASSWORD"
          docker push $BUILDER_CACHE
      
      - name: Build the BudgetTracker image
        env: 
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: | 
          export MASTER_CACHE=neongc/budgettracker:master
          export BRANCH_NAME=`echo $GITHUB_REF | sed "s/refs\/heads\///"`
          export CACHE_IMAGE=neongc/budgettracker:`echo $BRANCH_NAME | tr '/' '_'  | tr '@' '_'`
      
          echo "BRANCH_NAME: $BRANCH_NAME"
          echo "GITHUB_SHA: $GITHUB_SHA"
      
          docker build --cache-from $MASTER_CACHE --build-arg SONAR_TOKEN=$SONAR_TOKEN --build-arg "CiCommitName=$BRANCH_NAME" --build-arg "CiCommitHash=$GITHUB_SHA" --build-arg IsProduction=true -t $CACHE_IMAGE .
      
      - name: Push the BudgetTracker image
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        env: 
          DOCKER_LOGIN: ${{ secrets.DOCKER_LOGIN }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          export BRANCH_NAME=`echo $GITHUB_REF | sed "s/refs\/heads\///"`
          export CACHE_IMAGE=neongc/budgettracker:`echo $BRANCH_NAME | tr '/' '_'  | tr '@' '_'`
      
          docker login --username="$DOCKER_LOGIN" --password="$DOCKER_PASSWORD"
          docker push $CACHE_IMAGE
